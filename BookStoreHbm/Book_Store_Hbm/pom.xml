<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>me.feathers</groupId>
  <artifactId>Book_Store_Hbm</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Book_Store_Hbm Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.9.8</version>
      <scope>test</scope>
    </dependency>

    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>4.3.8.Final</version>
    </dependency>

    <!-- mvn install:install-file -Dfile=A:\Develop\jar\ojdbc6.jar -DgroupId=com.oracle
        -DartifactId=ojdbc6 -Dversion=11.2.0.3 -Dpackaging=jar -DgeneratePom=true -->
    <!-- ojdbc6 -->

    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>11.2.0.3</version>
    </dependency>

    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
    </dependency>

    <!-- c3p0 -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>4.3.8.Final</version>
    </dependency>

    <!-- 二级缓存供应商 -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-ehcache</artifactId>
      <version>4.3.8.Final</version>
    </dependency>

    <!-- 配置servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- 配置fastjson -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.21</version>
    </dependency>

    <!-- 配置jstl -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>Book_Store_Hbm</finalName>

  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.1</version>
      <configuration>
        <source>1.8</source>
        <target>1.8</target>
        <encoding>UTF-8</encoding>
      </configuration>
    </plugin>

    <!-- tomcat服务器插件 -->
    <plugin>
      <groupId>org.apache.tomcat.maven</groupId>
      <artifactId>tomcat7-maven-plugin</artifactId>
      <version>2.2</version>
      <configuration>
        <server>tomcat7</server>
        <port>8888</port>
        <!--处理get请求乱码问题-->
        <uriEncoding>utf-8</uriEncoding>
        <url>http://localhost:8888/manager/text</url>
        <path>/Book_Store_Hbm</path>
      </configuration>
    </plugin>

    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>2.17</version>
      <configuration>
        <!-- <forkCount>1</forkCount> <reuseForks>true</reuseForks> -->
        <!--设置包含的测试类 -->
        <!--<includes> <include>******</include> <include>*/User*</include>
            </includes> -->
        <!-- 设置不进行测试类 -->
        <!--<excludes> <exclude>Test*</exclude> </excludes> -->
        <!-- 跳过测试阶段，测试类的有问题也会出错，一般不推荐 -->
        <!--<skip>true</skip> -->
        <suiteXmlFiles>
          <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
        </suiteXmlFiles>
      </configuration>
    </plugin>

    <!-- 单元测试报告html 执行命令 mvn surefire-report:report -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-report-plugin</artifactId>
      <version>2.12.2</version>
      <configuration>
        <showSuccess>false</showSuccess>
      </configuration>
    </plugin>

    <!--mvn checkstyle:check/mvn checkstyle:checkstyle -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-checkstyle-plugin</artifactId>
      <version>2.17</version>
      <configuration>
        <configLocation>src/test/resources/my_checks.xml</configLocation>
      </configuration>
    </plugin>

    <!--可以运行"mvn jxr:jxr"来使checkstyle的结果可以直接跳转到代码行位置 先执行mvn jxr:jxr再执行mvn
        checkstyle:checkstyle才会出现此效果. -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-jxr-plugin</artifactId>
      <version>2.3</version>
    </plugin>

    <!-- 项目API doc报告 mvn javadoc:jar -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-javadoc-plugin</artifactId>
      <version>2.7</version>
    </plugin>

    <!--直接输入 mvn cobertura:cobertura,测试覆盖率的报告 -->


    <!-- findbug -->
    <!-- mvn findbugs:help 查看findbugs插件的帮助 mvn findbugs:check 检查代码是否通过findbugs检查，如果没有通过检查，检查会失败，但检查不会生成结果报表
        mvn findbugs:findbugs 检查代码是否通过findbugs检查，如果没有通过检查，检查不会失败，会生成结果报表保存在target/findbugsXml.xml文件中
        mvn findbugs:gui 检查代码并启动gui界面来查看结果 -->
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>findbugs-maven-plugin</artifactId>
      <version>3.0.0</version>
      <configuration>
        <xmlOutput>true</xmlOutput>
        <effort>Max</effort>
      </configuration>
    </plugin>
  </plugins>
  </build>
</project>
