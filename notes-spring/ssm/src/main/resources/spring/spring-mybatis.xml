<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:config/db.properties"/>
    </bean>
    <!--定义datasource-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"/>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"/>
    </me.feathers.bean>
    <!--定义事务管理器-->
    <me.feathers.bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </me.feathers.bean>
    <!-- 定义SqlSessionFactoryBean,是mybatis整合spring提供的bean，作用相当于SqlSessionFactory-->
    <me.feathers.bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--这里使用外部文件配置mybatis，解耦，方便查看和配置-->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
    </me.feathers.bean>
    <!-- 配置mapper扫描，这里使用注解扫描的方式，扫描所有含有标记注解@Mapper的所有mapper -->
    <me.feathers.bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定sqlSessionFactoryBean，使用名称指定-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--basePackage属性必须指定-->
        <property name="basePackage" value="me.feathers.ssm.mapper"/>
        <property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>
    </me.feathers.bean>
    <!--基于注解的事务-->
    <tx:annotation-driven/>
</beans>