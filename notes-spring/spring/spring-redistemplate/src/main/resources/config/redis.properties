
#ip地址
redis.host=39.107.120.250
#端口号
redis.port=6379
#如果有密码
redis.password=Feathers#521
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000

        
#连接超时时是否阻塞，false时报异常,ture阻塞直到超时, 默认true
redis.blockWhenExhausted=true
#逐出策略（默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)）
redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
#是否启用后进先出, 默认true
redis.lifo=true
#最大空闲连接数，默认8个，0表示无限制
redis.maxIdle=8
#最大连接数，0表示无限制，默认8,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=8
redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000
#最小空闲连接数，默认为0
redis.minIdle=0
#每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
redis.numTestsPerEvictionRun=1024
#对象空闲多久后逐出, 当空闲时间>该值 且 空闲连接>最大空闲数 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)
redis.softMinEvictableIdleTimeMillis=1800000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在进行createObject对返回的connection进行validateObject校验
redis.testOnCreate=true
#在进行returnObject对返回的connection进行validateObject校验
redis.testOnReturn=true
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000

#jmx相关，不了解
#是否启用pool的jmx管理功能, 默认true
redis.jmxEnabled=true
redis.jmxNameBase=xxx
redis.jmxNamePrefix=pool





#redis.sentinel.host1=172.20.1.230
#redis.sentinel.port1=26379


#redis.sentinel.host2=172.20.1.231
#redis.sentinel.port2=26379


#redis.sentinel.host3=172.20.1.232
#redis.sentinel.port3=26379